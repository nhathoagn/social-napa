{"ast":null,"code":"import { DISCOVER_TYPES } from '../actions/discoverAction';\nconst initialState = {\n  loading: false,\n  posts: [],\n  result: 9,\n  page: 2,\n  firstLoad: false\n};\n\nconst discoverReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case DISCOVER_TYPES.LOADING:\n      return { ...state,\n        loading: action.payload\n      };\n\n    case DISCOVER_TYPES.GET_POSTS:\n      return { ...state,\n        posts: action.payload.posts,\n        result: action.payload.result,\n        firstLoad: true\n      };\n\n    case DISCOVER_TYPES.UPDATE_POST:\n      return { ...state,\n        posts: action.payload.posts,\n        result: action.payload.result,\n        page: state.page + 1\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default discoverReducer;","map":{"version":3,"sources":["/home/nhathoang/Documents/MERN-Stack-Build-a-social-media-app/client/src/redux/reducers/discoverReducer.js"],"names":["DISCOVER_TYPES","initialState","loading","posts","result","page","firstLoad","discoverReducer","state","action","type","LOADING","payload","GET_POSTS","UPDATE_POST"],"mappings":"AAAA,SAASA,cAAT,QAA+B,2BAA/B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,MAAM,EAAE,CAHS;AAIjBC,EAAAA,IAAI,EAAE,CAJW;AAKjBC,EAAAA,SAAS,EAAE;AALM,CAArB;;AAQA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,cAAc,CAACW,OAApB;AACI,aAAO,EACH,GAAGH,KADA;AAEHN,QAAAA,OAAO,EAAEO,MAAM,CAACG;AAFb,OAAP;;AAIJ,SAAKZ,cAAc,CAACa,SAApB;AACI,aAAO,EACH,GAAGL,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT,KAFnB;AAGHC,QAAAA,MAAM,EAAEK,MAAM,CAACG,OAAP,CAAeR,MAHpB;AAIHE,QAAAA,SAAS,EAAE;AAJR,OAAP;;AAMJ,SAAKN,cAAc,CAACc,WAApB;AACI,aAAO,EACH,GAAGN,KADA;AAEHL,QAAAA,KAAK,EAAEM,MAAM,CAACG,OAAP,CAAeT,KAFnB;AAGHC,QAAAA,MAAM,EAAEK,MAAM,CAACG,OAAP,CAAeR,MAHpB;AAIHC,QAAAA,IAAI,EAAEG,KAAK,CAACH,IAAN,GAAa;AAJhB,OAAP;;AAMJ;AACI,aAAOG,KAAP;AArBR;AAuBH,CAxBD;;AA0BA,eAAeD,eAAf","sourcesContent":["import { DISCOVER_TYPES } from '../actions/discoverAction'\n\nconst initialState = {\n    loading: false,\n    posts: [],\n    result: 9,\n    page: 2,\n    firstLoad: false\n}\n\nconst discoverReducer = (state = initialState, action) => {\n    switch (action.type){\n        case DISCOVER_TYPES.LOADING:\n            return {\n                ...state,\n                loading: action.payload\n            };\n        case DISCOVER_TYPES.GET_POSTS:\n            return {\n                ...state,\n                posts: action.payload.posts,\n                result: action.payload.result,\n                firstLoad: true\n            };\n        case DISCOVER_TYPES.UPDATE_POST:\n            return {\n                ...state,\n                posts: action.payload.posts,\n                result: action.payload.result,\n                page: state.page + 1\n            };\n        default:\n            return state;\n    }\n}\n\nexport default discoverReducer\n"]},"metadata":{},"sourceType":"module"}