{"ast":null,"code":"export const checkImage = file => {\n  let err = \"\";\n  if (!file) return err = \"File does not exist.\";\n  if (file.size > 1024 * 1024) // 1mb\n    err = \"The largest image size is 1mb.\";\n  if (file.type !== 'image/jpeg' && file.type !== 'image/png') err = \"Image format is incorrect.\";\n  return err;\n};\nexport const imageUpload = async images => {\n  let imgArr = [];\n\n  for (const item of images) {\n    const formData = new FormData();\n\n    if (item.camera) {\n      formData.append(\"file\", item.camera);\n    } else {\n      formData.append(\"file\", item);\n    }\n\n    formData.append(\"upload_preset\", \"upload_image\");\n    formData.append(\"cloud_name\", \"ddnv4r9pb\");\n    const res = await fetch(\"https://api.cloudinary.com/v1_1/ddnv4r9pb/image/upload\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await res.json();\n    imgArr.push({\n      public_id: data.public_id,\n      url: data.secure_url\n    });\n  }\n\n  return imgArr;\n};","map":{"version":3,"sources":["/home/nhathoang/Documents/MERN-Stack-Build-a-social-media-app/client/src/utils/imageUpload.js"],"names":["checkImage","file","err","size","type","imageUpload","images","imgArr","item","formData","FormData","camera","append","res","fetch","method","body","data","json","push","public_id","url","secure_url"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAIC,IAAD,IAAU;AAChC,MAAIC,GAAG,GAAG,EAAV;AACA,MAAG,CAACD,IAAJ,EAAU,OAAOC,GAAG,GAAG,sBAAb;AAEV,MAAGD,IAAI,CAACE,IAAL,GAAY,OAAO,IAAtB,EAA4B;AAC5BD,IAAAA,GAAG,GAAG,gCAAN;AAEA,MAAGD,IAAI,CAACG,IAAL,KAAc,YAAd,IAA8BH,IAAI,CAACG,IAAL,KAAc,WAA/C,EACAF,GAAG,GAAG,4BAAN;AAEA,SAAOA,GAAP;AACH,CAXM;AAcP,OAAO,MAAMG,WAAW,GAAG,MAAOC,MAAP,IAAkB;AACzC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAI,MAAMC,IAAV,IAAkBF,MAAlB,EAAyB;AACrB,UAAMG,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AAEA,QAAGF,IAAI,CAACG,MAAR,EAAe;AACXF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAI,CAACG,MAA7B;AACH,KAFD,MAEK;AACDF,MAAAA,QAAQ,CAACG,MAAT,CAAgB,MAAhB,EAAwBJ,IAAxB;AACH;;AAEDC,IAAAA,QAAQ,CAACG,MAAT,CAAgB,eAAhB,EAAiC,cAAjC;AACAH,IAAAA,QAAQ,CAACG,MAAT,CAAgB,YAAhB,EAA8B,WAA9B;AAEA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAD,EAA2D;AAC9EC,MAAAA,MAAM,EAAE,MADsE;AAE9EC,MAAAA,IAAI,EAAEP;AAFwE,KAA3D,CAAvB;AAKA,UAAMQ,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAJ,EAAnB;AACAX,IAAAA,MAAM,CAACY,IAAP,CAAY;AAACC,MAAAA,SAAS,EAAEH,IAAI,CAACG,SAAjB;AAA4BC,MAAAA,GAAG,EAAEJ,IAAI,CAACK;AAAtC,KAAZ;AACH;;AACD,SAAOf,MAAP;AACH,CAvBM","sourcesContent":["export const checkImage = (file) => {\n    let err = \"\"\n    if(!file) return err = \"File does not exist.\"\n\n    if(file.size > 1024 * 1024) // 1mb\n    err = \"The largest image size is 1mb.\"\n\n    if(file.type !== 'image/jpeg' && file.type !== 'image/png' )\n    err = \"Image format is incorrect.\"\n\n    return err;\n}\n\n\nexport const imageUpload = async (images) => {\n    let imgArr = [];\n    for(const item of images){\n        const formData = new FormData()\n\n        if(item.camera){\n            formData.append(\"file\", item.camera)\n        }else{\n            formData.append(\"file\", item)\n        }\n\n        formData.append(\"upload_preset\", \"upload_image\")\n        formData.append(\"cloud_name\", \"ddnv4r9pb\")\n\n        const res = await fetch(\"https://api.cloudinary.com/v1_1/ddnv4r9pb/image/upload\", {\n            method: \"POST\",\n            body: formData\n        })\n\n        const data = await res.json()\n        imgArr.push({public_id: data.public_id, url: data.secure_url})\n    }\n    return imgArr;\n}\n"]},"metadata":{},"sourceType":"module"}